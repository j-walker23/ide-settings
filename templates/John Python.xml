<templateSet group="John Python">
  <template name="rps" value="$name$: PS = PS('$name$', $parent$, $END$)" description="Reportlab ParagraphStyle" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="parent" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python_Class" value="true" />
    </context>
  </template>
  <template name="rpsize" value="**font_space($num$)" description="Reportlab ParagraphStyle fontsize and leading" toReformat="true" toShortenFQNames="true">
    <variable name="num" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python_Class" value="true" />
    </context>
  </template>
  <template name="rts" value="$name$: TS = TS([&#10;  ('$style$', $END$)&#10;], $parent$)" description="Reportlab TableStyle" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="style" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="parent" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python_Class" value="true" />
    </context>
  </template>
  <template name="rpalign" value="alignment=TA_$direction$" description="Reportlab ParagraphStyle alignment" toReformat="true" toShortenFQNames="true">
    <variable name="direction" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python_Class" value="true" />
    </context>
  </template>
  <template name="rtfont" value="('FONT', ($sc$, $sr$), ($ec$, $er$), FONT, $size$, lead($size$))," description="Reportlab TableStyle font" toReformat="true" toShortenFQNames="true">
    <variable name="sc" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="sr" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ec" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="er" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="size" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python_Class" value="true" />
    </context>
  </template>
  <template name="typing" value="if TYPE_CHECKING:&#10;  import sc.sql as sql" description="if TYPE_CHECKING:" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="pr" value="print('$text$', $text$)" description="print format" toReformat="true" toShortenFQNames="true">
    <variable name="text" expression="clipboard()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbs" value="$p$: Union[Column, str] = Column(String($v$)$END$)" description="db.String" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="v" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbb" value="$p$: Union[Column, bool] = Column(Boolean, nullable=False, default=False)$END$" description="db.Boolean" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbd" value="$p$: Union[Column, Arrow] = Column(ArrowType$END$)" description="db.Datetim" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbcol" value="$p$: Union[Column, $type$] = Column($n$)" description="db.Col" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="type" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="n" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbrelm" value="$prop$: Union[Column, List['sql.$model$']] = relationship('$model$', secondary='$sec$', backref=backref('$back$'))" description="many to many" toReformat="true" toShortenFQNames="true">
    <variable name="prop" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="model" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="sec" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="back" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbkey" value="$p$: Union[Column, int] = Column(Integer, ForeignKey('$n$', **const.FK_DEL), nullable=False$END$)" description="FoeignKey" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="n" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbrel" value="$prop$: Union[Column, List['sql.$model$']] = relationship('$model$', cascade='all, delete-orphan', passive_deletes=True)" description="one to many" toReformat="true" toShortenFQNames="true">
    <variable name="prop" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="model" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbt" value="$p$: Union[Column, str] = Column(Text)$END$" description="db.Text" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbi" value="$p$: Union[Column, int] = Column(Integer)$END$" description="db.Integer" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbf" value="$p$: Union[Column, float] = Column(Float)$END$" description="db.Float" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="lo" value="log.info(f'$v$')" description="log" toReformat="true" toShortenFQNames="true">
    <variable name="v" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fix" value="@pytest.fixture&#10;def $name$():&#10;  &quot;&quot;&quot;&quot;&quot;&quot;&#10;  &#10;  return $END$&#10;" description="@pytest.fixture" toReformat="false" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
      <option name="Python_Class" value="false" />
    </context>
  </template>
  <template name="dbj" value="$p$: Union[Column, Dict] = Column(JSONType())" description="JSONType" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ptf" value="def test_$name$(self):&#10;  &quot;&quot;&quot;$what$&quot;&quot;&quot;&#10;  $END$&#10;" description="pytest class test fn" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="what" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbe" value="$p$: : Union[Column, $clas$] = Column(EnumType($clas$), default=$clas$$END$)" description="db.Enum" toReformat="true" toShortenFQNames="true">
    <variable name="p" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="clas" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="loo" value="log = get_logger(__name__)" description="logging.getLogger()" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="dbrelo" value="$prop$: Union[Column, 'sql.$model$'] = relationship('$model$', uselist=False)" description="one to one" toReformat="true" toShortenFQNames="true">
    <variable name="prop" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="model" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="task" value="from sc.app.tasks import $name$" description="celery task" toReformat="true" toShortenFQNames="true">
    <variable name="name" expression="completeSmart()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cs" value="{$VAR_EXPR$ for $VAR$ in $ITERABLE$ $END$}" description="Set comprehension" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="regularExpression(ITERABLE, &quot;(.).*&quot;, &quot;$1&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_EXPR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cl" value="[$VAR_EXPR$ for $VAR$ in $ITERABLE$ $END$]" description="List comprehension" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="regularExpression(ITERABLE, &quot;(.).*&quot;, &quot;$1&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_EXPR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cg" value="$VAR_EXPR$ for $VAR$ in $ITERABLE$ $END$" description="Generator comprehension" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="regularExpression(ITERABLE, &quot;(.).*&quot;, &quot;$1&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_EXPR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="cd" value="{$KEY_EXPR$: $VAL_EXPR$ for $VAR$ in $ITERABLE$ $END$}" description="Dict comprehension" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="regularExpression(ITERABLE, &quot;(.).*&quot;, &quot;$1&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="KEY_EXPR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <variable name="VAL_EXPR" expression="" defaultValue="VAR" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fie" value="for $INDEX$, $VAR$ in enumerate($ITERABLE$):&#10;    $END$" description="Iterate (for ... in enumerate)" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="collectionElementName(ITERABLE)" defaultValue="" alwaysStopAt="true" />
    <variable name="INDEX" expression="" defaultValue="&quot;i&quot;" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="fi" value="for $VAR$ in $ITERABLE$:&#10;    $END$" description="Iterate (for ... in ...)" toReformat="false" toShortenFQNames="true">
    <variable name="ITERABLE" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="collectionElementName(ITERABLE)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="snakeit" value="$val$" description="clipboard to snake case" toReformat="false" toShortenFQNames="true">
    <variable name="val" expression="snakeCase(clipboard())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ne" value="next($VAR_EXPR$ for $VAR$ in $ITERABLE$$END$)" description="next(comp)" toReformat="true" toShortenFQNames="true">
    <variable name="ITERABLE" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_EXPR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
  <template name="ned" value="next(($VAR_EXPR$ for $VAR$ in $ITERABLE$$END$), None)" description="next((comp), default=None)" toReformat="true" toShortenFQNames="true">
    <variable name="ITERABLE" expression="pyIterableVariable()" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="VAR_EXPR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="Python" value="true" />
    </context>
  </template>
</templateSet>